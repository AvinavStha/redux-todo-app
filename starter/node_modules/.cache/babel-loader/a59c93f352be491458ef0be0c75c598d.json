{"ast":null,"code":"//incharege updating and controlling the todo state\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [{\n    id: 1,\n    tittle: \"todo1\",\n    completed: false\n  }, {\n    id: 2,\n    tittle: \"todo2\",\n    completed: false\n  }, {\n    id: 1,\n    tittle: \"todo3\",\n    completed: true\n  }],\n  reducers: {\n    //updates the current state to the new state\n    addTodo: (state, action) => {\n      const newTodo = {\n        id: Date.now(),\n        title: action.payload.title,\n        completed: false\n      }; //state as params that will add new todo to the arrays\n\n      state.push(newTodo);\n    }\n  }\n}); //returns bunch of action right off the actions objects\n\nexport const {\n  addTodo\n} = todoSlice.actions; //to add it to the store\n\nexport default todoSlice.reducer;","map":{"version":3,"sources":["/Users/avinavshrestha/Desktop/react-redux-todo-app/starter/src/components/redux/todoSlice.js"],"names":["createSlice","todoSlice","name","initialState","id","tittle","completed","reducers","addTodo","state","action","newTodo","Date","now","title","payload","push","actions","reducer"],"mappings":"AAAA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,OADsB;AAE5BC,EAAAA,YAAY,EAAE,CACZ;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,MAAM,EAAE,OAFV;AAGEC,IAAAA,SAAS,EAAE;AAHb,GADY,EAMZ;AACIF,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,MAAM,EAAE,OAFZ;AAGIC,IAAAA,SAAS,EAAE;AAHf,GANY,EAWV;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,MAAM,EAAE,OAFV;AAGEC,IAAAA,SAAS,EAAE;AAHb,GAXU,CAFc;AAoB5BC,EAAAA,QAAQ,EAAC;AACL;AACAC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxB,YAAMC,OAAO,GAAG;AACZP,QAAAA,EAAE,EAACQ,IAAI,CAACC,GAAL,EADS;AAEZC,QAAAA,KAAK,EAACJ,MAAM,CAACK,OAAP,CAAeD,KAFT;AAGZR,QAAAA,SAAS,EAAC;AAHE,OAAhB,CADwB,CAMxB;;AACAG,MAAAA,KAAK,CAACO,IAAN,CAAWL,OAAX;AACH;AAVI;AApBmB,CAAD,CAA7B,C,CAkCA;;AACA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAcP,SAAS,CAACgB,OAA9B,C,CAEP;;AACA,eAAehB,SAAS,CAACiB,OAAzB","sourcesContent":["//incharege updating and controlling the todo state\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [\n    {\n      id: 1,\n      tittle: \"todo1\",\n      completed: false,\n    },\n    {\n        id: 2,\n        tittle: \"todo2\",\n        completed: false,\n      },\n      {\n        id: 1,\n        tittle: \"todo3\",\n        completed: true,\n      },\n  ],\n\n  reducers:{\n      //updates the current state to the new state\n      addTodo: (state, action) => {\n          const newTodo = {\n              id:Date.now(),\n              title:action.payload.title,\n              completed:false,\n          };\n          //state as params that will add new todo to the arrays\n          state.push(newTodo);\n      },\n  }\n});\n\n//returns bunch of action right off the actions objects\nexport const { addTodo } = todoSlice.actions;\n\n//to add it to the store\nexport default todoSlice.reducer;"]},"metadata":{},"sourceType":"module"}