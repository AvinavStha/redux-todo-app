{"ast":null,"code":"//incharege updating and controlling the todo state\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [{\n    id: 1,\n    title: \"todo1\",\n    completed: false\n  }, {\n    id: 2,\n    title: \"todo2\",\n    completed: false\n  }, {\n    id: 3,\n    title: \"todo3\",\n    completed: true\n  }],\n  reducers: {\n    //updates the current state to the new state\n    addTodo: (state, action) => {\n      const newTodo = {\n        id: Date.now(),\n        title: action.payload.title,\n        completed: false\n      }; //state as params that will add new todo to the arrays\n\n      state.push(newTodo);\n    }\n  }\n}); //returns bunch of action right off the actions objects\n\nexport const {\n  addTodo\n} = todoSlice.actions; //to add it to the store\n\nexport default todoSlice.reducer;","map":{"version":3,"sources":["/Users/avinavshrestha/Desktop/react-redux-todo-app/starter/src/components/redux/todoSlice.js"],"names":["createSlice","todoSlice","name","initialState","id","title","completed","reducers","addTodo","state","action","newTodo","Date","now","payload","push","actions","reducer"],"mappings":"AAAA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,OADsB;AAE5BC,EAAAA,YAAY,EAAE,CACZ;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,OAAhB;AAAyBC,IAAAA,SAAS,EAAE;AAApC,GADY,EAEZ;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,OAAhB;AAAyBC,IAAAA,SAAS,EAAE;AAApC,GAFY,EAGZ;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,OAAhB;AAAyBC,IAAAA,SAAS,EAAE;AAApC,GAHY,CAFc;AAQ5BC,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1B,YAAMC,OAAO,GAAG;AACdP,QAAAA,EAAE,EAAEQ,IAAI,CAACC,GAAL,EADU;AAEdR,QAAAA,KAAK,EAAEK,MAAM,CAACI,OAAP,CAAeT,KAFR;AAGdC,QAAAA,SAAS,EAAE;AAHG,OAAhB,CAD0B,CAM1B;;AACAG,MAAAA,KAAK,CAACM,IAAN,CAAWJ,OAAX;AACD;AAVO;AARkB,CAAD,CAA7B,C,CAsBA;;AACA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAcP,SAAS,CAACe,OAA9B,C,CAEP;;AACA,eAAef,SAAS,CAACgB,OAAzB","sourcesContent":["//incharege updating and controlling the todo state\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [\n    { id: 1, title: \"todo1\", completed: false },\n    { id: 2, title: \"todo2\", completed: false },\n    { id: 3, title: \"todo3\", completed: true },\n  ],\n\n  reducers: {\n    //updates the current state to the new state\n    addTodo: (state, action) => {\n      const newTodo = {\n        id: Date.now(),\n        title: action.payload.title,\n        completed: false,\n      };\n      //state as params that will add new todo to the arrays\n      state.push(newTodo);\n    },\n  },\n});\n\n//returns bunch of action right off the actions objects\nexport const { addTodo } = todoSlice.actions;\n\n//to add it to the store\nexport default todoSlice.reducer;"]},"metadata":{},"sourceType":"module"}